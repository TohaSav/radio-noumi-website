export const formatTime = (timestamp: number): string => {
  const now = Date.now();
  const diff = now - timestamp;
  const minutes = Math.floor(diff / 60000);
  const hours = Math.floor(minutes / 60);

  if (hours > 0) return `${hours}—á`;
  if (minutes > 0) return `${minutes}–º`;
  return "—Ç–æ–ª—å–∫–æ —á—Ç–æ";
};

export const emojis = ["‚ù§Ô∏è", "üòç", "üòÇ", "üòÆ", "üò¢", "üëè", "üî•", "üíØ"];

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
const STORIES_STORAGE_KEY = "user-stories";

export const saveStoriesToStorage = (stories: any[]) => {
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∏—Å—Ç–æ—Ä–∏–π —Å —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const storiesForStorage = stories.map((story) => ({
      ...story,
      // URL.createObjectURL —Å–æ–∑–¥–∞–µ—Ç blob URLs –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
      // –î–ª—è –¥–µ–º–æ –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      media: story.media.map((m: any) => ({
        ...m,
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      })),
    }));
    localStorage.setItem(
      STORIES_STORAGE_KEY,
      JSON.stringify(storiesForStorage),
    );
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–π:", error);
  }
};

export const loadStoriesFromStorage = () => {
  try {
    const stored = localStorage.getItem(STORIES_STORAGE_KEY);
    return stored ? JSON.parse(stored) : [];
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–π:", error);
    return [];
  }
};

export const clearStoriesFromStorage = () => {
  try {
    localStorage.removeItem(STORIES_STORAGE_KEY);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–π:", error);
  }
};
