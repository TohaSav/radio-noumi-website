import React, { useState, useEffect, useRef } from "react";
import { Link } from "react-router-dom";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import Icon from "@/components/ui/icon";
import { Profile, User, Like, Message } from "@/types/dating";
import ProfileCard from "@/components/dating/ProfileCard";
import ProfileForm from "@/components/dating/ProfileForm";
import ChatSection from "@/components/dating/ChatSection";
import UserPanel from "@/components/dating/UserPanel";

const DatingChat = () => {
  const [showProfileModal, setShowProfileModal] = useState(false);
  const [showRegisterForm, setShowRegisterForm] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [usedMessages, setUsedMessages] = useState<Set<string>>(new Set());
  const [usedProfiles, setUsedProfiles] = useState<Set<string>>(new Set());
  const [profiles, setProfiles] = useState<Profile[]>([
    {
      id: "1",
      photo:
        "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400",
      name: "–ê–Ω–Ω–∞",
      age: 25,
      city: "–ú–æ—Å–∫–≤–∞",
      height: "165 —Å–º",
      weight: "55 –∫–≥",
      lookingFor: "–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
      about: "–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏. –†–∞–±–æ—Ç–∞—é –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º.",
      userId: "user1",
    },
    {
      id: "2",
      photo:
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400",
      name: "–î–º–∏—Ç—Ä–∏–π",
      age: 28,
      city: "–°–ü–±",
      height: "180 —Å–º",
      weight: "75 –∫–≥",
      lookingFor: "–î—Ä—É–∂–±–∞ –∏ –æ–±—â–µ–Ω–∏–µ",
      about: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–≤–ª–µ–∫–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏ –∫–∏–Ω–æ.",
      userId: "user2",
    },
    {
      id: "3",
      photo:
        "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400",
      name: "–ï–ª–µ–Ω–∞",
      age: 23,
      city: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
      height: "170 —Å–º",
      weight: "58 –∫–≥",
      lookingFor: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
      about: "–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ, –æ–±–æ–∂–∞—é –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ –ø—Ä–∏—Ä–æ–¥—É.",
      userId: "user3",
    },
    {
      id: "4",
      photo:
        "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400",
      name: "–ê–ª–µ–∫—Å–µ–π",
      age: 32,
      city: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
      height: "175 —Å–º",
      weight: "80 –∫–≥",
      lookingFor: "–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
      about: "–ò–Ω–∂–µ–Ω–µ—Ä, –ª—é–±–ª—é –≥–æ—Ç–æ–≤–∏—Ç—å –∏ –∏–≥—Ä–∞—Ç—å –Ω–∞ –≥–∏—Ç–∞—Ä–µ.",
      userId: "user4",
    },
    {
      id: "5",
      photo:
        "https://images.unsplash.com/photo-1517841905240-472988babdf9?w=400",
      name: "–ú–∞—Ä–∏—è",
      age: 26,
      city: "–ö–∞–∑–∞–Ω—å",
      height: "162 —Å–º",
      weight: "52 –∫–≥",
      lookingFor: "–î—Ä—É–∂–±–∞ –∏ –æ–±—â–µ–Ω–∏–µ",
      about: "–£—á–∏—Ç–µ–ª—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é –∏ –∏–∑—É—á–∞—é —è–∑—ã–∫–∏.",
      userId: "user5",
    },
    {
      id: "6",
      photo:
        "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400",
      name: "–ê—Ä—Ç—ë–º",
      age: 29,
      city: "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
      height: "183 —Å–º",
      weight: "78 –∫–≥",
      lookingFor: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
      about: "–§–æ—Ç–æ–≥—Ä–∞—Ñ, –æ–±–æ–∂–∞—é –∑–∞–∫–∞—Ç—ã –∏ –≥–æ—Ä—ã.",
      userId: "user6",
    },
  ]);
  const [likes, setLikes] = useState<Like[]>([]);
  const [messages, setMessages] = useState<Message[]>([
    {
      id: "msg1",
      text: "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö—Ç–æ —Ç—É—Ç –Ω–æ–≤–µ–Ω—å–∫–∏–π? üòä",
      userId: "user1",
      userName: "–ê–Ω–Ω–∞",
      chatType: "general",
      timestamp: new Date(Date.now() - 300000),
    },
    {
      id: "msg2",
      text: "–í—Å–µ–º –¥–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –ö–∞–∫ –¥–µ–ª–∞?",
      userId: "user2",
      userName: "–î–º–∏—Ç—Ä–∏–π",
      chatType: "general",
      timestamp: new Date(Date.now() - 240000),
    },
    {
      id: "msg3",
      text: "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è! –ö—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—á–µ—Ç –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è?",
      userId: "user3",
      userName: "–ï–ª–µ–Ω–∞",
      chatType: "general",
      timestamp: new Date(Date.now() - 180000),
    },
    {
      id: "msg4",
      text: "–ê —è –≤–æ—Ç –≤—á–µ—Ä–∞ –≤ –∫–∏–Ω–æ —Ö–æ–¥–∏–ª, –∫–ª–∞—Å—Å–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ—Å–º–æ—Ç—Ä–µ–ª!",
      userId: "user4",
      userName: "–ê–ª–µ–∫—Å–µ–π",
      chatType: "general",
      timestamp: new Date(Date.now() - 120000),
    },
    {
      id: "msg5",
      text: "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑—É—á–∞–µ—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏? –ú–æ–∂–µ–º –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ üìö",
      userId: "user5",
      userName: "–ú–∞—Ä–∏—è",
      chatType: "general",
      timestamp: new Date(Date.now() - 60000),
    },
  ]);
  const [messageInput, setMessageInput] = useState("");
  const [selectedChat, setSelectedChat] = useState<string | null>(null);
  const [activeTab, setActiveTab] = useState("general");
  const audioRef = useRef<HTMLAudioElement>(null);

  // –ú–∞—Å—Å–∏–≤—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const messageTemplates = [
    "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö—Ç–æ —Ç—É—Ç –Ω–æ–≤–µ–Ω—å–∫–∏–π? üòä",
    "–í—Å–µ–º –¥–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –ö–∞–∫ –¥–µ–ª–∞?",
    "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è! –ö—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—á–µ—Ç –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è?",
    "–ê —è –≤–æ—Ç –≤—á–µ—Ä–∞ –≤ –∫–∏–Ω–æ —Ö–æ–¥–∏–ª, –∫–ª–∞—Å—Å–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ—Å–º–æ—Ç—Ä–µ–ª!",
    "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑—É—á–∞–µ—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏? –ú–æ–∂–µ–º –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ üìö",
    "–ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ? üåü",
    "–ö—Ç–æ –ª—é–±–∏—Ç –≥–æ—Ç–æ–≤–∏—Ç—å? –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏! üë®‚Äçüç≥",
    "–°–µ–≥–æ–¥–Ω—è —Ç–∞–∫–æ–π –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç! üåÖ",
    "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∏–≥—Ä–∞–µ—Ç –Ω–∞ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö? üé∏",
    "–ò—â—É –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –ø–æ—Ö–æ–¥–∞ –≤ —Ç–µ–∞—Ç—Ä üé≠",
    "–ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–ø–æ—Ä—Ç–æ–º? –î–∞–≤–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üí™",
    "–û–±–æ–∂–∞—é —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏, –∫—Ç–æ —Ç–æ–∂–µ –ª—é–±–∏—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É? üìñ",
    "–ü–ª–∞–Ω–∏—Ä—É—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –∫—Ç–æ –±—ã–ª –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö? ‚úàÔ∏è",
    "–ö—Ç–æ –ª—é–±–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å? –ü–æ–¥–µ–ª–∏–º—Å—è –æ–ø—ã—Ç–æ–º! üì∏",
    "–°–µ–≥–æ–¥–Ω—è –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –Ω–æ–≤–æ–µ –∫–∞—Ñ–µ, –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å! ‚òï",
  ];

  const nameTemplates = [
    "–ê–Ω–Ω–∞",
    "–î–º–∏—Ç—Ä–∏–π",
    "–ï–ª–µ–Ω–∞",
    "–ê–ª–µ–∫—Å–µ–π",
    "–ú–∞—Ä–∏—è",
    "–ê—Ä—Ç—ë–º",
    "–û–ª—å–≥–∞",
    "–ò–≤–∞–Ω",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞",
    "–ú–∞–∫—Å–∏–º",
    "–¢–∞—Ç—å—è–Ω–∞",
    "–°–µ—Ä–≥–µ–π",
    "–ù–∞—Ç–∞–ª—å—è",
    "–ü–∞–≤–µ–ª",
    "–Æ–ª–∏—è",
    "–ê–Ω–¥—Ä–µ–π",
    "–°–≤–µ—Ç–ª–∞–Ω–∞",
    "–†–æ–º–∞–Ω",
    "–ò—Ä–∏–Ω–∞",
    "–î–µ–Ω–∏—Å",
    "–í–∏–∫—Ç–æ—Ä–∏—è",
    "–ú–∏—Ö–∞–∏–ª",
  ];

  const cityTemplates = [
    "–ú–æ—Å–∫–≤–∞",
    "–°–ü–±",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    "–ö–∞–∑–∞–Ω—å",
    "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
    "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
    "–í–æ—Ä–æ–Ω–µ–∂",
    "–°–∞–º–∞—Ä–∞",
    "–û–º—Å–∫",
    "–ß–µ–ª—è–±–∏–Ω—Å–∫",
    "–£—Ñ–∞",
    "–ü–µ—Ä–º—å",
  ];

  const lookingForTemplates = [
    "–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
    "–î—Ä—É–∂–±–∞ –∏ –æ–±—â–µ–Ω–∏–µ",
    "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
    "–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ —É–≤–ª–µ—á–µ–Ω–∏—è",
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤–¥–≤–æ–µ–º",
    "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä",
  ];

  const aboutTemplates = [
    "–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏. –†–∞–±–æ—Ç–∞—é –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º.",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–≤–ª–µ–∫–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏ –∫–∏–Ω–æ.",
    "–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ, –æ–±–æ–∂–∞—é –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ –ø—Ä–∏—Ä–æ–¥—É.",
    "–ò–Ω–∂–µ–Ω–µ—Ä, –ª—é–±–ª—é –≥–æ—Ç–æ–≤–∏—Ç—å –∏ –∏–≥—Ä–∞—Ç—å –Ω–∞ –≥–∏—Ç–∞—Ä–µ.",
    "–£—á–∏—Ç–µ–ª—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é –∏ –∏–∑—É—á–∞—é —è–∑—ã–∫–∏.",
    "–§–æ—Ç–æ–≥—Ä–∞—Ñ, –æ–±–æ–∂–∞—é –∑–∞–∫–∞—Ç—ã –∏ –≥–æ—Ä—ã.",
    "–†–∞–±–æ—Ç–∞—é –≤ IT, —É–≤–ª–µ–∫–∞—é—Å—å —Ç–∞–Ω—Ü–∞–º–∏ –∏ –π–æ–≥–æ–π.",
    "–ü—Å–∏—Ö–æ–ª–æ–≥, –ª—é–±–ª—é —Ç–µ–∞—Ç—Ä –∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é –º—É–∑—ã–∫—É.",
    "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏–µ–π.",
    "–í—Ä–∞—á, –∑–∞–Ω–∏–º–∞—é—Å—å –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ–º –∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ–º.",
  ];

  const photoTemplates = [
    "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400",
    "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400",
    "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400",
    "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400",
    "https://images.unsplash.com/photo-1517841905240-472988babdf9?w=400",
    "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400",
    "https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400",
    "https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=400",
    "https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=400",
    "https://images.unsplash.com/photo-1539571696357-5a69c17a67c6?w=400",
  ];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
  const getUniqueItem = (array: string[], usedSet: Set<string>): string => {
    const availableItems = array.filter((item) => !usedSet.has(item));
    if (availableItems.length === 0) {
      // –ï—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã, –æ—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
      usedSet.clear();
      return array[Math.floor(Math.random() * array.length)];
    }
    const randomItem =
      availableItems[Math.floor(Math.random() * availableItems.length)];
    usedSet.add(randomItem);
    return randomItem;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
  const createUniqueProfile = (): Profile => {
    const name = getUniqueItem(nameTemplates, usedProfiles);
    const profileId = `profile_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;

    return {
      id: profileId,
      photo: photoTemplates[Math.floor(Math.random() * photoTemplates.length)],
      name,
      age: Math.floor(Math.random() * (35 - 18) + 18),
      city: cityTemplates[Math.floor(Math.random() * cityTemplates.length)],
      height: `${Math.floor(Math.random() * (190 - 155) + 155)} —Å–º`,
      weight: `${Math.floor(Math.random() * (85 - 45) + 45)} –∫–≥`,
      lookingFor:
        lookingForTemplates[
          Math.floor(Math.random() * lookingForTemplates.length)
        ],
      about: aboutTemplates[Math.floor(Math.random() * aboutTemplates.length)],
      userId: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
    };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const createUniqueMessage = (): Message => {
    const messageText = getUniqueItem(messageTemplates, usedMessages);
    const userName =
      nameTemplates[Math.floor(Math.random() * nameTemplates.length)];

    return {
      id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      text: messageText,
      userId: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      userName,
      chatType: "general",
      timestamp: new Date(),
    };
  };

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
  useEffect(() => {
    const addProfileInterval = setInterval(
      () => {
        const newProfile = createUniqueProfile();
        setProfiles((prev) => [...prev, newProfile]);
      },
      10 * 60 * 1000,
    ); // 10 –º–∏–Ω—É—Ç

    return () => clearInterval(addProfileInterval);
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥—ã–µ 2-5 –º–∏–Ω—É—Ç
  useEffect(() => {
    const addMessageInterval = setInterval(
      () => {
        const newMessage = createUniqueMessage();
        setMessages((prev) => [...prev, newMessage]);
      },
      Math.random() * (5 - 2) * 60 * 1000 + 2 * 60 * 1000,
    ); // 2-5 –º–∏–Ω—É—Ç

    return () => clearInterval(addMessageInterval);
  }, []);

  const [profileForm, setProfileForm] = useState({
    photo: "",
    name: "",
    age: "",
    city: "",
    height: "",
    weight: "",
    lookingFor: "",
    about: "",
  });

  const [registerForm, setRegisterForm] = useState({
    login: "",
    email: "",
    password: "",
  });

  // –§–æ–Ω–æ–≤–æ–µ —Ä–∞–¥–∏–æ
  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.volume = 0.3;
      audioRef.current.play().catch(() => {});
    }
  }, []);

  const handleProfileSubmit = () => {
    if (!currentUser) return;

    const newProfile: Profile = {
      id: Date.now().toString(),
      photo:
        profileForm.photo ||
        "https://images.unsplash.com/photo-1494790108755-2616b612b786",
      name: profileForm.name,
      age: parseInt(profileForm.age),
      city: profileForm.city,
      height: profileForm.height,
      weight: profileForm.weight,
      lookingFor: profileForm.lookingFor,
      about: profileForm.about,
      userId: currentUser.id,
    };

    setProfiles([...profiles, newProfile]);
    setShowProfileModal(false);
    setProfileForm({
      photo: "",
      name: "",
      age: "",
      city: "",
      height: "",
      weight: "",
      lookingFor: "",
      about: "",
    });
  };

  const handleLike = (profileId: string) => {
    if (!currentUser) return;

    const newLike: Like = {
      id: Date.now().toString(),
      fromUserId: currentUser.id,
      toProfileId: profileId,
    };

    setLikes([...likes, newLike]);
  };

  const handleRegisterSubmit = () => {
    const newUser: User = {
      id: Date.now().toString(),
      login: registerForm.login,
      email: registerForm.email,
    };

    setCurrentUser(newUser);
    setIsLoggedIn(true);
    setShowRegisterForm(false);
    setRegisterForm({ login: "", email: "", password: "" });
  };

  const handleSendMessage = () => {
    if (!messageInput.trim() || !currentUser) return;

    const newMessage: Message = {
      id: Date.now().toString(),
      text: messageInput,
      userId: currentUser.id,
      userName: currentUser.login,
      chatType: activeTab === "private" ? "private" : "general",
      timestamp: new Date(),
    };

    setMessages([...messages, newMessage]);
    setMessageInput("");
  };

  const handleInputFocus = () => {
    if (!isLoggedIn) {
      setShowRegisterForm(true);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-purple-100 flex flex-col">
      {/* –§–æ–Ω–æ–≤–æ–µ —Ä–∞–¥–∏–æ */}
      <audio ref={audioRef} loop>
        <source src="https://myradio24.org/61673" type="audio/mpeg" />
      </audio>

      {/* –•–µ–¥–µ—Ä */}
      <div className="bg-white/80 backdrop-blur-sm shadow-lg border-b border-pink-200/50">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-4">
            <Link
              to="/"
              className="flex items-center gap-2 text-gray-600 hover:text-gray-800"
            >
              <Icon name="ArrowLeft" size={20} />
              <span>Radio Noumi</span>
            </Link>
            <h1 className="text-2xl font-bold bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent flex items-center gap-2 animate-fade-in">
              <Icon name="Heart" size={24} />
              –ß–∞—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤
            </h1>
          </div>
          <div className="flex items-center gap-3 text-sm text-gray-600 bg-white/60 px-3 py-2 rounded-full shadow-sm">
            <Icon name="Radio" size={16} />
            <span>–§–æ–Ω–æ–≤–æ–µ —Ä–∞–¥–∏–æ</span>
          </div>
        </div>
      </div>

      <div className="flex-1 flex">
        {/* –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç */}
        <div className="flex-1 flex flex-col">
          <ChatSection
            messages={messages}
            activeTab={activeTab}
            selectedChat={selectedChat}
            onTabChange={setActiveTab}
            onChatSelect={setSelectedChat}
          />

          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
          <div className="p-4 bg-gradient-to-r from-white to-pink-50/50 border-t border-pink-200/50 backdrop-blur-sm">
            <div className="flex gap-3 max-w-4xl mx-auto">
              <Input
                type="text"
                value={messageInput}
                onChange={(e) => setMessageInput(e.target.value)}
                onFocus={handleInputFocus}
                placeholder={
                  isLoggedIn
                    ? "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                    : "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã..."
                }
                className="flex-1 border-pink-200 focus:border-pink-400 focus:ring-pink-400/20 bg-white/90 placeholder:text-pink-400/70 transition-all duration-300"
                onKeyPress={(e) => e.key === "Enter" && handleSendMessage()}
              />
              <Button
                onClick={handleSendMessage}
                disabled={!messageInput.trim() || !isLoggedIn}
                className="bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl"
              >
                <Icon name="Send" size={16} />
              </Button>
            </div>
          </div>

          {/* –ü—Ä–æ—Ñ–∏–ª–∏ */}
          <div className="p-6 bg-gradient-to-br from-pink-50/80 to-purple-50/80 backdrop-blur-sm">
            <div className="max-w-7xl mx-auto">
              <h2 className="text-2xl font-bold text-center mb-6 bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent">
                –ê–Ω–∫–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üíï
              </h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {profiles.map((profile, index) => (
                  <div
                    key={profile.id}
                    className="animate-fade-in"
                    style={{ animationDelay: `${index * 0.1}s` }}
                  >
                    <ProfileCard
                      profile={profile}
                      onLike={handleLike}
                      currentUserId={currentUser?.id}
                    />
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
        <UserPanel
          isLoggedIn={isLoggedIn}
          currentUser={currentUser}
          likes={likes}
          profiles={profiles}
          onRegisterClick={() => setShowRegisterForm(true)}
        />
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      <Dialog open={showProfileModal} onOpenChange={setShowProfileModal}>
        <DialogContent className="max-w-md max-h-[90vh] overflow-hidden">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Icon name="User" size={20} />
              –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É
            </DialogTitle>
          </DialogHeader>
          <ProfileForm
            form={profileForm}
            onChange={setProfileForm}
            onSubmit={handleProfileSubmit}
          />
        </DialogContent>
      </Dialog>

      <Dialog open={showRegisterForm} onOpenChange={setShowRegisterForm}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Icon name="UserPlus" size={20} />
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </DialogTitle>
          </DialogHeader>
          <div className="space-y-4">
            <div>
              <label className="text-sm font-medium text-gray-700">
                –õ–æ–≥–∏–Ω *
              </label>
              <Input
                type="text"
                placeholder="–í–∞—à –ª–æ–≥–∏–Ω"
                value={registerForm.login}
                onChange={(e) =>
                  setRegisterForm({ ...registerForm, login: e.target.value })
                }
                className="mt-1"
              />
            </div>
            <div>
              <label className="text-sm font-medium text-gray-700">
                Email *
              </label>
              <Input
                type="email"
                placeholder="your@email.com"
                value={registerForm.email}
                onChange={(e) =>
                  setRegisterForm({ ...registerForm, email: e.target.value })
                }
                className="mt-1"
              />
            </div>
            <div>
              <label className="text-sm font-medium text-gray-700">
                –ü–∞—Ä–æ–ª—å *
              </label>
              <Input
                type="password"
                placeholder="–ü–∞—Ä–æ–ª—å"
                value={registerForm.password}
                onChange={(e) =>
                  setRegisterForm({ ...registerForm, password: e.target.value })
                }
                className="mt-1"
              />
            </div>
            <div className="flex gap-2">
              <Button
                onClick={handleRegisterSubmit}
                disabled={
                  !registerForm.login ||
                  !registerForm.email ||
                  !registerForm.password
                }
                className="flex-1 bg-pink-500 hover:bg-pink-600"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Button>
              <Button
                variant="outline"
                onClick={() => {
                  setShowRegisterForm(false);
                  setShowProfileModal(true);
                }}
                disabled={!isLoggedIn}
              >
                –ê–Ω–∫–µ—Ç–∞
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default DatingChat;
