import { Button } from "@/components/ui/button";
import { useNavigate } from "react-router-dom";
import Icon from "@/components/ui/icon";
import EmbeddedRadioPlayer from "@/components/EmbeddedRadioPlayer";
import { useState, useEffect } from "react";

const Hero = () => {
  const navigate = useNavigate();
  const [likes, setLikes] = useState(258569850);
  const [pulse, setPulse] = useState(false);
  const [isLiked, setIsLiked] = useState(false);
  const [hearts, setHearts] = useState<{ id: number; x: number; y: number }[]>([]);
  const [likeTexts, setLikeTexts] = useState<{ id: number; x: number; y: number }[]>([]);
  const [showTopChart, setShowTopChart] = useState(false);

  // –°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω —Ç–æ–ø —á–∞—Ä—Ç–∞
  const topChartSongs = [
    "–ù–æ—á—å (–ê–ª—å—Ñ–∞ –Ω–æ—á—å)", "–ß–µ–±–µ—Ä –∫—ã—à–Ω–æ", "–ù–æ—á—å –¥–ª—è –º–µ–Ω—è", "–ù–æ—á–Ω–æ–π –≥–æ—Ä–æ–¥", "–ù–∞—à–µ –ª–µ—Ç–æ",
    "–ú–æ—ò–∞ –º–∞–ª–∞", "–†—É—Å—Å–∫–∞—è –¥—É—à–∞", "–î–∞–≤–∞–π—Ç–µ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å", "–í–∏—Ç–∞–ª–µ–Ω—å–∫–∞ –º–æ–π", "–ë—ñ–∑ ”©–º—ñ—Ä —Å“Ø—Ä–µ–º—ñ–∑",
    "Sola Sin Ti", "–î–µ–≤–æ—á–∫–∞ –º–æ—è", "–í–∏—Ç–∞–ª—è —Ç–≤–æ–π —â–∏—Ç", "–õ–∏–ª–æ–≤—ã–π –≥–æ—Ä–æ–¥", "–ë”ô—Ö–µ—Ç–ª–µ –π”©—Ä”ô–∫",
    "–ë–∞–±—É–ª–∏", "–í —Ç–µ–Ω–∏ —Ä–∞—Å—Å–≤–µ—Ç–∞", "–£—à–∏", "I Want It All", "–°—É–∫–∞", "–°–ª—ë–∑—ã", "–û—Ç–∫—Ä–æ–π –≥–ª–∞–∑–∞",
    "–ú–∞–ª—ã—à", "–ú–µ–Ω—ñ“£ –ñ–∞—Ä—ã“ì—ã–º", "–õ–µ—Ç–æ –∑–æ–≤—ë—Ç", "–õ–µ–¥—è–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ", "–ê—Ö –ª–µ—Ç–æ", "–ë–æ–∫–∞–ª –∑–∞ –±–æ–∫–∞–ª–æ–º",
    "–ë–æ–∫–∞–ª –∑–∞ –ë–æ–∫–∞–ª–æ–º Danc remix", "–í–∏—Ç–∞–ª—è –ñ“±–ª–¥—ã–∑", "–í—ã —É—à–ª–∏", "–ö–ª–µ–æ–ø–∞—Ç—Ä–∞", "Áã¨ÁâπÁöÑÁà±",
    "–Ø —Ñ–µ–Ω–∏–∫—Å", "–Ø –æ—Ä–µ–ª", "–Ø –¥–æ–±–∏–ª—Å—è", "–ß–∞—Å—Ç—É—à–∫–∏", "–¢—ã –ö–æ—Ä–æ–ª–µ–≤–∞ –¢—ã –∑–≤–µ–∑–¥–∞", "–¢–∏—Ö–∏–π –ü–ª–∞—á",
    "–¢–∏–∫—Ç–æ–Ω–∏–∫ –±–æ–π", "–¢–∞–Ω—Ü—É—è –≤ –ø–æ–∏—Å–∫–∞—Ö –ª—é–±–≤–∏", "–¢–∞–Ω—Ü—É—é –æ–¥–Ω–∞", "–¢–∞–Ω—Ü—É–π", "–¢–∞–Ω—Ü–ø–æ–ª –º–æ–π",
    "–°—á–∞—Å—Ç–ª–∏–≤–æ–µ –¥–µ—Ç—Å–≤–æ", "–°“±–ª—É –ü–∞—Ç—à–∞–π—ã–º", "–°—Ç–∞–ª—å–Ω–æ–π —á–µ–ª–æ–≤–µ–∫", "–°–ø–∞—Å–∏–±–æ –±–æ–∂–µ",
    "–°–æ–ª–Ω—ã—à–∫–æ –∏ –î—Ä—É–∑—å—è", "–°–ª–æ–º–∞–Ω—ã–µ –∫—Ä—ã–ª—å—è", "–°–∏–ª–∞ –í–Ω—É—Ç—Ä–∏", "–†—É—Å—Å–∫–∞—è –∂–µ–Ω—â–∏–Ω–∞",
    "–†—É–ª–µ—Ç–∫–∞ –ª—é–±–æ–≤—å", "–†–µ–∞–ª—å–Ω–∞—è –ª—é–±–æ–≤—å", "–ü—É—Å—Ç–æ–π –¥–æ–º", "–ü—Ä—è–Ω–∏—á–Ω–∞—è —Ç—É—á–∫–∞",
    "–ü–æ—Ü–µ–ª—É–∏ –≤ –°—É–º–µ—Ä–∫–∞—Ö", "–ü–µ—Å–Ω—è –ø—Ä–æ –†–æ—Å—Å–∏—é", "–ü–µ—Å–Ω—è –ø–æ –¥—Ä—É–≥–∞", "–ü–∞–ø–∞ —è —Å —Ç–æ–±–æ–π",
    "–û—Ç–∫—Ä—ã—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ", "–û–¥–∏–Ω–æ—á–∫–∞ —à–∞–Ω—Å–æ–Ω", "–ù–æ—á–Ω–∞—è –∂–∏–∑–Ω—å", "–ö—Ä–∏–∫ —Ä–µ–±–µ–Ω–∫–∞",
    "–ö—É—Ä–æ—Ä—Ç–Ω—ã–π —Ä–æ–º–∞–Ω", "–ù–µ–∑–º–∞–∫–æ–Ω–µ—Ü —Å —É–ª–∏—Ü–µ", "–ù–∞—à–∏ –ì–µ—Ä–æ–∏", "–ù–∞—à –ø—Ä–∏–∑–∏–¥–µ–Ω—Ç",
    "–ú–æ—è –∫–æ—Ä–æ–ª–µ–≤–∞", "–ú–æ—è –∂–µ–Ω–∞", "–ú–æ—è –¥–µ–≤–æ—á–∫–∞ —Å–æ –º–Ω–æ–π", "–ú–æ–π –ø—É—Ç—å", "–ú–æ–∏ –º–∞–º—ã –∏ –∂–µ–Ω–∞",
    "–ú–∞–º–∏–Ω–∞ –±–æ–ª—å", "–õ–µ—Ç–æ —É –ú–æ—Ä—è", "–ö–æ—Ä–æ–ª–µ–≤–∞ –±–∞–ª–∞", "–ö–ª—É–±–Ω–∏—á–Ω—ã–π –ø–æ—Ü–µ–ª—É–π",
    "–ó–µ–ª–µ–Ω–æ–≥–ª–∞–∑—ã–π –º–µ–¥", "–í–µ—á–Ω–∞—è –ø–∞–º—è—Ç—å", "–í–µ—Ä–Ω–∏—Å—å –º–∞–º–∞", "–í–µ–ª–∏–∫–∞—è –†–æ—Å—Å–∏—è",
    "–ë–æ–ª—å—à–∞—è,—á–µ–º –¥—Ä—É–∂–±–∞", "Queen of Dance (Bass Remix)", "Hot Summer Girls",
    "Game of Life", "Chocolate Lips", "22 –∏—é–Ω—è"
  ];
  
  const handleLike = (e: React.MouseEvent) => {
    if (!isLiked) {
      setLikes(prev => prev + 1);
      setIsLiked(true);
      setPulse(true);
      setTimeout(() => setPulse(false), 600);
      
      // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–¥–µ—á–∫–∏ –æ—Ç –º–µ—Å—Ç–∞ –∫–ª–∏–∫–∞
      const rect = e.currentTarget.getBoundingClientRect();
      const centerX = rect.left + rect.width / 2;
      const centerY = rect.top + rect.height / 2;
      
      const newHearts = Array.from({ length: 8 }, (_, i) => ({
        id: Date.now() + i,
        x: centerX + (Math.random() - 0.5) * 100,
        y: centerY + (Math.random() - 0.5) * 50,
      }));
      
      setHearts(prev => [...prev, ...newHearts]);
      
      // –£–¥–∞–ª—è–µ–º —Å–µ—Ä–¥–µ—á–∫–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        setHearts(prev => prev.filter(heart => !newHearts.includes(heart)));
      }, 2000);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —á–∏—Å–µ–ª
  const formatNumber = (num: number): string => {
    if (num >= 1000000) {
      return (num / 1000000).toFixed(1) + "M";
    } else if (num >= 1000) {
      return (num / 1000).toFixed(0) + "K";
    }
    return num.toString();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å–µ—Ä–¥–µ—á–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
  const getHeartSize = (text: string) => {
    const length = text.length;
    if (length <= 3) return { container: 'w-24 h-24', heart: 'text-6xl', text: 'text-xs' };
    if (length <= 5) return { container: 'w-28 h-28', heart: 'text-7xl', text: 'text-sm' };
    if (length <= 7) return { container: 'w-32 h-32', heart: 'text-8xl', text: 'text-base' };
    return { container: 'w-36 h-36', heart: 'text-9xl', text: 'text-lg' };
  };

  useEffect(() => {
    // –ë–æ–ª–µ–µ —á–∞—Å—Ç–æ–µ –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤
    const likesInterval = setInterval(
      () => {
        // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç 200 –¥–æ 500
        const randomIncrease = Math.floor(Math.random() * 301) + 200; // 200-500
        setLikes((prev) => prev + randomIncrease);
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞
        setPulse(true);
        setTimeout(() => setPulse(false), 600);
      },
      Math.random() * 1000 + 500, // 0.5-1.5 —Å–µ–∫—É–Ω–¥—ã (–±—ã—Å—Ç—Ä–µ–µ!)
    );

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–æ—Å—Ç–∞ –≤ –ø–∏–∫–æ–≤—ã–µ —á–∞—Å—ã
    const peakHoursInterval = setInterval(() => {
      const currentHour = new Date().getHours();
      
      // –ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã: 18-23 (–≤–µ—á–µ—Ä) –∏ 9-12 (—É—Ç—Ä–æ)
      if ((currentHour >= 18 && currentHour <= 23) || (currentHour >= 9 && currentHour <= 12)) {
        const peakIncrease = Math.floor(Math.random() * 500) + 300; // 300-800 (–µ—â—ë –±–æ–ª—å—à–µ!)
        setLikes((prev) => prev + peakIncrease);
        
        setPulse(true);
        setTimeout(() => setPulse(false), 600);
      }
    }, 1500); // –ö–∞–∂–¥—ã–µ 1.5 —Å–µ–∫—É–Ω–¥—ã –≤ –ø–∏–∫–æ–≤—ã–µ —á–∞—Å—ã (–±—ã—Å—Ç—Ä–µ–µ!)

    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ª–µ—Ç—è—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤ "Like"
    const likeTextInterval = setInterval(() => {
      const newLikeText = {
        id: Date.now() + Math.random(),
        x: Math.random() * 60 + 20, // 20-80% –æ—Ç —à–∏—Ä–∏–Ω—ã
        y: 50, // –ù–∞—á–∏–Ω–∞–µ–º —Å —Å–µ—Ä–µ–¥–∏–Ω—ã
      };
      
      setLikeTexts((prev) => [...prev, newLikeText]);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã (–≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏)
      setTimeout(() => {
        setLikeTexts((prev) => prev.filter((text) => text.id !== newLikeText.id));
      }, 3000);
    }, 1500); // –ö–∞–∂–¥—ã–µ 1.5 —Å–µ–∫—É–Ω–¥—ã

    return () => {
      clearInterval(likesInterval);
      clearInterval(peakHoursInterval);
      clearInterval(likeTextInterval);
    };
  }, []);

  return (
    <section className="relative min-h-screen flex items-start justify-center text-center px-4 pt-4">



      {/* Hero Content */}
      <div className="max-w-4xl mx-auto space-y-4">
        <EmbeddedRadioPlayer streamUrl="https://myradio24.org/61673" />

        {/* –õ–∞–π–∫–∏ —Å —Å–µ—Ä–¥–µ—á–∫–æ–º */}
        <div className="flex flex-col items-center justify-center gap-2">
          <div className="relative">
            <button 
              onClick={handleLike}
              className={`relative flex items-center justify-center w-12 h-12 transition-all duration-300 hover:scale-110 cursor-pointer ${
                pulse ? 'scale-125' : 'scale-100'
              }`}
            >
              {/* –°–µ—Ä–¥–µ—á–∫–æ —Ñ–æ–Ω */}
              <div className={`text-3xl transition-all duration-300 ${
                isLiked ? 'text-red-600' : 'text-red-500'
              } ${
                pulse ? 'animate-pulse' : ''
              }`}>
                ‚ô°
              </div>
            </button>
            
            {/* –õ–µ—Ç—è—â–∏–µ —Ç–µ–∫—Å—Ç—ã "Like" */}
            {likeTexts.map((likeText) => (
              <div
                key={likeText.id}
                className="fixed pointer-events-none text-white/70 text-xs font-medium animate-like-float z-50"
                style={{
                  left: `calc(50vw + ${likeText.x - 50}px)`,
                  top: '50vh',
                  transform: 'translate(-50%, -50%)',
                }}
              >
                Like
              </div>
            ))}
          </div>
          
          {/* –¶–∏—Ñ—Ä–∞ –ø–æ–¥ —Å–µ—Ä–¥–µ—á–∫–æ–º */}
          <span className="text-white/90 font-medium text-sm drop-shadow-sm">
            {formatNumber(likes)}
          </span>
        </div>

        <p className="text-xl md:text-2xl text-purple-200 max-w-2xl mx-auto leading-relaxed">
          –ú—É–∑—ã–∫–∞, —á—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –∂–∏—Ç—å
        </p>
      </div>

      {/* Floating Hearts Animation */}
      {hearts.map((heart) => (
        <div
          key={heart.id}
          className="fixed pointer-events-none z-50 text-red-500 animate-float-up-heart"
          style={{
            left: heart.x,
            top: heart.y,
            fontSize: '20px',
            animation: 'floatUpHeart 2s ease-out forwards',
          }}
        >
          ‚ù§Ô∏è
        </div>
      ))}

      {/* –ö–Ω–æ–ø–∫–∞ –¢–æ–ø –ß–∞—Ä—Ç */}
      <button
        onClick={() => setShowTopChart(true)}
        className="absolute top-4 right-4 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 hover:scale-105 shadow-lg z-20"
      >
        üéµ –¢–æ–ø –ß–∞—Ä—Ç
      </button>

      {/* Floating Elements */}
      <div className="absolute top-20 right-20 w-4 h-4 bg-purple-400 rounded-full animate-pulse opacity-60"></div>
      <div className="absolute bottom-32 left-16 w-6 h-6 bg-pink-400 rounded-full animate-pulse opacity-40 delay-1000"></div>
      <div className="absolute top-1/2 right-8 w-3 h-3 bg-indigo-400 rounded-full animate-pulse opacity-50 delay-500"></div>
      
      <style jsx>{`
        @keyframes floatUpHeart {
          0% {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
          50% {
            opacity: 0.8;
            transform: translateY(-50px) scale(1.2);
          }
          100% {
            opacity: 0;
            transform: translateY(-100px) scale(0.5);
          }
        }
      `}</style>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¢–æ–ø –ß–∞—Ä—Ç */}
      {showTopChart && (
        <div className="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
          <div className="bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 rounded-2xl p-6 max-w-2xl w-full max-h-[80vh] relative border border-purple-500/30">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-white flex items-center gap-2">
                üéµ <span className="bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">–¢–æ–ø –ß–∞—Ä—Ç Radio Noumi</span>
              </h2>
              <button
                onClick={() => setShowTopChart(false)}
                className="text-white/70 hover:text-white p-2 hover:bg-white/10 rounded-full transition-all"
              >
                <Icon name="X" size={20} />
              </button>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω */}
            <div className="overflow-y-auto max-h-[60vh] custom-scrollbar">
              <div className="space-y-2">
                {topChartSongs.map((song, index) => (
                  <div
                    key={index}
                    className="flex items-center gap-3 p-3 rounded-lg bg-white/5 hover:bg-white/10 transition-colors group"
                  >
                    <div className="flex-shrink-0 w-8 h-8 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center text-white text-sm font-bold">
                      {index + 1}
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="text-white font-medium truncate group-hover:text-purple-300 transition-colors">
                        {song}
                      </div>
                    </div>
                    <div className="flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity">
                      <Icon name="Play" size={16} className="text-purple-400" />
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* –ü–æ–¥–≤–∞–ª */}
            <div className="mt-6 pt-4 border-t border-white/10 text-center">
              <p className="text-white/60 text-sm">
                üî• –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏ Radio Noumi
              </p>
            </div>
          </div>
        </div>
      )}
    </section>
  );
};

export default Hero;